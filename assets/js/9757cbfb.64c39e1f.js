"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[9380],{1099:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});var t=s(4848),r=s(8453);const o={sidebar_position:2},d="Syntax Node-based",i={id:"normal-mode/selection-modes/syntax-node-based",title:"Syntax Node-based",description:"The following selection modes are based on the syntax node of the file, which are",source:"@site/docs/normal-mode/selection-modes/syntax-node-based.md",sourceDirName:"normal-mode/selection-modes",slug:"/normal-mode/selection-modes/syntax-node-based",permalink:"/ki-editor/docs/normal-mode/selection-modes/syntax-node-based",draft:!1,unlisted:!1,editUrl:"https://github.com/ki-editor/ki-editor/tree/master/docs/normal-mode/selection-modes/syntax-node-based.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Selection Modes",permalink:"/ki-editor/docs/normal-mode/selection-modes/"},next:{title:"Regex-based",permalink:"/ki-editor/docs/normal-mode/selection-modes/regex-based"}},l={},a=[{value:"Token",id:"token",level:2},{value:"Syntax Node",id:"syntax-node",level:2},{value:"Syntax Node",id:"syntax-node-1",level:2},{value:"Largest Node",id:"largest-node",level:3},{value:"Named node",id:"named-node",level:3},{value:"Fine Syntax Node",id:"fine-syntax-node",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",sup:"sup",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"syntax-node-based",children:"Syntax Node-based"})}),"\n",(0,t.jsxs)(n.p,{children:["The following selection modes are based on the syntax node of the file, which are\npowered by ",(0,t.jsx)(n.a,{href:"https://github.com/tree-sitter",children:"Tree-sitter"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"token",children:"Token"}),"\n",(0,t.jsxs)(n.p,{children:["Keybinding: ",(0,t.jsx)(n.code,{children:"t"})]}),"\n",(0,t.jsx)(n.p,{children:"Token as in parser terminology, which represents the basic atoms of a syntax node."}),"\n",(0,t.jsx)(n.p,{children:"It is useful for example, to select the name of the current variable (or identifier to be more general)."}),"\n",(0,t.jsx)(n.h2,{id:"syntax-node",children:"Syntax Node"}),"\n",(0,t.jsx)(n.p,{children:"This is one of my favourite selection mode, as it enable structural editing."}),"\n",(0,t.jsx)(n.p,{children:"There are two Syntax Node selection modes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Coarse: faster movement, lower accuracy"}),"\n",(0,t.jsx)(n.li,{children:"Fine: higher accuracy, slower movement"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"syntax-node-1",children:"Syntax Node"}),"\n",(0,t.jsxs)(n.p,{children:["Keybinding: ",(0,t.jsx)(n.code,{children:"s"})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Movement"}),(0,t.jsx)(n.th,{children:"Meaning"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/ki-editor/docs/normal-mode/core-movements#previousnext",children:"Previous/Next"})}),(0,t.jsx)(n.td,{children:"Previous/Next named sibling node"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Up"}),(0,t.jsx)(n.td,{children:"Parent node"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Down"}),(0,t.jsx)(n.td,{children:"First named child node"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Current"}),(0,t.jsx)(n.td,{children:"Largest node"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Jump"}),(0,t.jsx)(n.td,{children:"Jump to largest node"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"largest-node",children:"Largest Node"}),"\n",(0,t.jsx)(n.p,{children:"Using the following Javascript expression as example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"fox.bar();\n"})}),"\n",(0,t.jsxs)(n.p,{children:["There are several syntax nodes that start with ",(0,t.jsx)(n.code,{children:"f"}),(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fox"})," (identifier)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fox.bar"})," (member expression)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fox.bar()"})," (call expression)"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Suppose the cursor is below ",(0,t.jsx)(n.code,{children:"f"}),", pressing ",(0,t.jsx)(n.code,{children:"s"})," selects ",(0,t.jsx)(n.code,{children:"fox.bar()"}),", because ",(0,t.jsx)(n.code,{children:"fox.bar()"})," is the largest node that starts with ",(0,t.jsx)(n.code,{children:"f"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"named-node",children:"Named node"}),"\n",(0,t.jsx)(n.p,{children:"When creating a Tree sitter grammar file for a language, the author can choose\nto not give names to a certain kind of nodes."}),"\n",(0,t.jsx)(n.p,{children:'For example, "," are usually unnamed (\nanonymous) in most language grammars, thus it will be skipped when using the\nPrevious/Next movement in Syntax Node.'}),"\n",(0,t.jsxs)(n.p,{children:["See more at ",(0,t.jsx)(n.a,{href:"https://tree-sitter.github.io/tree-sitter/using-parsers#named-vs-anonymous-nodes",children:"https://tree-sitter.github.io/tree-sitter/using-parsers#named-vs-anonymous-nodes"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"fine-syntax-node",children:"Fine Syntax Node"}),"\n",(0,t.jsxs)(n.p,{children:["Keybinding: ",(0,t.jsx)(n.code,{children:"S"}),(0,t.jsx)(n.br,{}),"\n","Reason: Coarse is more commonly used than Fine, thus Fine is assigned a harder-to-press key."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Movement"}),(0,t.jsx)(n.th,{children:"Meaning"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/ki-editor/docs/normal-mode/core-movements#previousnext",children:"Previous/Next"})}),(0,t.jsx)(n.td,{children:"Previous/Next sibling node"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Up"}),(0,t.jsx)(n.td,{children:"Parent node"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Down"}),(0,t.jsx)(n.td,{children:"First child"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Current"}),(0,t.jsx)(n.td,{children:"Smallest node that matches the current selection"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Jump"}),(0,t.jsx)(n.td,{children:"Jump to smallest node"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"Fine Syntax Node is useful when you start to expand the selection starting from the current token."}),"\n",(0,t.jsxs)(n.p,{children:["Suppose we have the following Javascript expression, and the current selection is ",(0,t.jsx)(n.code,{children:"hello"}),", and we want to select ",(0,t.jsx)(n.code,{children:"hello.world()"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"hello.world().foo().bar().spam().wise();\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If we press ",(0,t.jsx)(n.code,{children:"s"}),", the whole expression will be selected",(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1-2","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),", and we will need to press ",(0,t.jsx)(n.code,{children:"j"})," several times to shrink the selection down to ",(0,t.jsx)(n.code,{children:"hello.world()"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["However, if we use ",(0,t.jsx)(n.code,{children:"S"})," instead, the selection will remain as ",(0,t.jsx)(n.code,{children:"hello"}),", and pressing ",(0,t.jsx)(n.code,{children:"k"})," multiple times will get us to ",(0,t.jsx)(n.code,{children:"hello.world()"}),"."]}),"\n","\n",(0,t.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,t.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,t.jsxs)(n.p,{children:["You can try it out at ",(0,t.jsx)(n.a,{href:"https://astexplorer.net/",children:"https://astexplorer.net/"}),", using the ",(0,t.jsx)(n.code,{children:"@typescript-eslint/parser"}),". ",(0,t.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})," ",(0,t.jsxs)(n.a,{href:"#user-content-fnref-1-2","data-footnote-backref":"","aria-label":"Back to reference 1-2",className:"data-footnote-backref",children:["\u21a9",(0,t.jsx)(n.sup,{children:"2"})]})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>i});var t=s(6540);const r={},o=t.createContext(r);function d(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);