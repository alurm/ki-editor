name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: all-rust-check
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.80.0
          components: rustfmt, clippy
      - uses: extractions/setup-just@v1
      - name: Just
        run: just

      - name: Verify installation
        run: just install

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/
          
  build-debian:
    name: build-debian-artifacts
    runs-on: ubuntu-22.04
    needs: check
    # if: github.ref == 'refs/heads/master'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.80.0
      
      - uses: extractions/setup-just@v1
      
      - name: Build release artifacts
        run: |
          cargo build --release
          # Assuming your binary is built to target/release/your-app-name
          # Update 'your-app-name' with your actual binary name
          mkdir -p artifacts
          cp target/release/your-app-name artifacts/
          cd artifacts && tar -czvf your-app-debian-x86_64.tar.gz your-app-name
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/your-app-debian-x86_64.tar.gz
          draft: true
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
